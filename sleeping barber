#include &lt;stdio.h&gt;
#include &lt;unistd.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;time.h&gt;
#include &lt;pthread.h&gt;
#include &lt;semaphore.h&gt;
#define MAX_CUSTOMERS 25
void *customer(void *num);
void *barber(void *);
void randwait(int secs);
sem_t waitingRoom;
sem_t barberChair;
sem_t barberPillow;
sem_t seatBelt;
int allDone = 0;
int main(int argc, char *argv[]) {
pthread_t btid;
pthread_t tid[MAX_CUSTOMERS];
long RandSeed;
int i, numCustomers, numChairs;
int Number[MAX_CUSTOMERS];
printf(“Enter the number of Custmors : “); scanf(“%d”,&amp;numCustomers) ;
printf(“Enter the number of Charis : “); scanf(“%d”,&amp;numChairs);
if (numCustomers &gt; MAX_CUSTOMERS) {
printf(“The maximum number of Customers is %d.\n”, MAX_CUSTOMERS);
exit(-1);
}
for (i=0; i&lt;MAX_CUSTOMERS; i++) {
Number[i] = i;
}
sem_init(&amp;waitingRoom, 0, numChairs);
sem_init(&amp;barberChair, 0, 1);
sem_init(&amp;barberPillow, 0, 0);
sem_init(&amp;seatBelt, 0, 0);
pthread_create(&amp;btid, NULL, barber, NULL);
for (i=0; i&lt;numCustomers; i++) {
pthread_create(&amp;tid[i], NULL, customer, (void *)&amp;Number[i]);
sleep(1);
}
for (i=0; i&lt;numCustomers; i++) {
pthread_join(tid[i],NULL);
sleep(1);
}
allDone = 1;
sem_post(&amp;barberPillow); 
pthread_join(btid,NULL);
}
void *customer(void *number) {
int num = *(int *)number;
printf(“Customer %d leaving for barber shop.\n”, num);
randwait(2);
printf(“Customer %d arrived at barber shop.\n”, num);
sem_wait(&amp;waitingRoom);
printf(“Customer %d entering waiting room.\n”, num);
sem_wait(&amp;barberChair);
sem_post(&amp;waitingRoom);
printf(“Customer %d waking the barber.\n”, num);
sem_post(&amp;barberPillow);
sem_wait(&amp;seatBelt);

sem_post(&amp;barberChair);
printf(“Customer %d leaving barber shop.\n”, num);
}
void *barber(void *junk) {
while (!allDone)
{
printf(“The barber is sleeping\n”);
sem_wait(&amp;barberPillow);
if (!allDone) 
{
printf(“The barber is cutting hair\n”);
randwait(2);
printf(“The barber has finished cutting hair.\n”);
sem_post(&amp;seatBelt);
}
else {
printf(“The barber is going home for the day.\n”);
}
}
}
void randwait(int secs) {
int len;
len = (int) ((1 * secs) + 1);
sleep(len);
}
